const jwt = require("jsonwebtoken")

// Auth Manager handles token distribution and verification
function authManager() {
    // Verify if token within request is valid
    verify = function (req, res, next) {
        //res.append('X-CSE356', '61fa16dc73ba724f297dba00') // For class
        
        //console.log("Verify cookie['token']: %s", JSON.stringify(req.cookies['token']))
        try {
            const token = req.cookies.token;
            if (!token) { // If token is not included in request cookies
                console.log("Error: no token in cookies")
                res.append('X-CSE356', '61fa16dc73ba724f297dba00')
                return res.status(200).json({ // Return Unauthorized
                    error: true,
                    loggedIn: false,
                    user: null,
                    message: "Unauthorized - no token"
                })
            }
            // Token is Included. Check if token is signed by our key.
            const verified = jwt.verify(token, process.env.JWT_SECRET)
            req.userId = verified.userId; // Attaches userId to request object

            next(); // continues to next callback function
        } catch (err) {
            console.error(err);
            res.append('X-CSE356', '61fa16dc73ba724f297dba00')
            return res.status(200).json({
                error: true,
                message: "Unauthorized"
            });
        }
    }

    // Signs and returns token to function caller
    signToken = function (user) {
        return jwt.sign({
            userId: user._id // USER ID IS ID GENERATED BY MONGODB
        }, process.env.JWT_SECRET);
    }

    return this;
}

const auth = authManager();
module.exports = auth;